version: '3.8'

services:
  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: stock_alerts
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d stock_alerts"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    restart: always
    command: redis-server --maxmemory 64mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      JVMFLAGS: "-Xms128M -Xmx256M"
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper

  kafka:
    image: confluentinc/cp-kafka:latest
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: "-Xms128M -Xmx256M"
    volumes:
      - kafka_data:/var/lib/kafka

  authentication-service:
    build: ./services/authentication_service
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgresql://user:password@postgres:5432/stock_alerts"

  stock-fetching-service:
    build: ./services/stock-fetching-service
    restart: always
    ports:
      - "8002:8002"
    depends_on:
      - kafka
      - redis
      - postgres
    environment:
      REDIS_BROKER_URL: "redis://redis:6379/0"

  stock-alert-service:
    build: ./services/stock-alert-service
    restart: always
    ports:
      - "8001:8001"
    depends_on:
      - kafka
      - postgres
      - redis

  notification-service:
    build: ./services/notification-service
    restart: always
    ports:
      - "8003:8003"
    depends_on:
      - kafka
      - postgres
      - redis

  celery-worker:
    build: ./services/stock-fetching-service
    restart: always
    depends_on:
      - redis
      - stock-fetching-service
    command: celery -A app.core.celery worker --loglevel=info
    environment:
      REDIS_BROKER_URL: "redis://redis:6379/0"

  celery-beat:
    build: ./services/stock-fetching-service
    restart: always
    depends_on:
      - redis
      - celery-worker
    command: celery -A app.core.celery beat --loglevel=info
    environment:
      REDIS_BROKER_URL: "redis://redis:6379/0"

  api-gateway:
    build: ./services/api-gateway
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - authentication-service
      - stock-fetching-service
      - stock-alert-service
      - notification-service
    environment:
      AUTH_SERVICE_URL: "http://authentication-service:8000"
      STOCK_FETCH_SERVICE_URL: "http://stock-fetching-service:8002"
      STOCK_ALERT_SERVICE_URL: "http://stock-alert-service:8001"
      NOTIFICATION_SERVICE_URL: "http://notification-service:8003"

volumes:
  postgres_data:
  redis_data:
  zookeeper_data:
  kafka_data:
